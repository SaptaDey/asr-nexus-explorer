{"version":3,"file":"pieDiagram-NIOCPIFQ-Cya1N03e.js","sources":["../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/mermaid/dist/chunks/mermaid.core/pieDiagram-NIOCPIFQ.mjs","../node_modules/d3-shape/src/pie.js"],"sourcesContent":["export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import {\n  populateCommonDb\n} from \"./chunk-353BL4L5.mjs\";\nimport {\n  cleanAndMerge,\n  parseFontSize\n} from \"./chunk-55PJQP7W.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-P3VETL53.mjs\";\nimport {\n  __name,\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig2 as getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/diagrams/pie/pieParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/pie/pieDb.ts\nvar DEFAULT_PIE_CONFIG = defaultConfig_default.pie;\nvar DEFAULT_PIE_DB = {\n  sections: /* @__PURE__ */ new Map(),\n  showData: false,\n  config: DEFAULT_PIE_CONFIG\n};\nvar sections = DEFAULT_PIE_DB.sections;\nvar showData = DEFAULT_PIE_DB.showData;\nvar config = structuredClone(DEFAULT_PIE_CONFIG);\nvar getConfig2 = /* @__PURE__ */ __name(() => structuredClone(config), \"getConfig\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  sections = /* @__PURE__ */ new Map();\n  showData = DEFAULT_PIE_DB.showData;\n  clear();\n}, \"clear\");\nvar addSection = /* @__PURE__ */ __name(({ label, value }) => {\n  if (!sections.has(label)) {\n    sections.set(label, value);\n    log.debug(`added new section: ${label}, with value: ${value}`);\n  }\n}, \"addSection\");\nvar getSections = /* @__PURE__ */ __name(() => sections, \"getSections\");\nvar setShowData = /* @__PURE__ */ __name((toggle) => {\n  showData = toggle;\n}, \"setShowData\");\nvar getShowData = /* @__PURE__ */ __name(() => showData, \"getShowData\");\nvar db = {\n  getConfig: getConfig2,\n  clear: clear2,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  setShowData,\n  getShowData\n};\n\n// src/diagrams/pie/pieParser.ts\nvar populateDb = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  db2.setShowData(ast.showData);\n  ast.sections.map(db2.addSection);\n}, \"populateDb\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"pie\", input);\n    log.debug(ast);\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/pie/pieStyles.ts\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${options.pieOuterStrokeColor};\n    stroke-width: ${options.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`, \"getStyles\");\nvar pieStyles_default = getStyles;\n\n// src/diagrams/pie/pieRenderer.ts\nimport { arc, pie as d3pie, scaleOrdinal } from \"d3\";\nvar createPieArcs = /* @__PURE__ */ __name((sections2) => {\n  const pieData = [...sections2.entries()].map((element) => {\n    return {\n      label: element[0],\n      value: element[1]\n    };\n  }).sort((a, b) => {\n    return b.value - a.value;\n  });\n  const pie = d3pie().value(\n    (d3Section) => d3Section.value\n  );\n  return pie(pieData);\n}, \"createPieArcs\");\nvar draw = /* @__PURE__ */ __name((text, id, _version, diagObj) => {\n  log.debug(\"rendering pie chart\\n\" + text);\n  const db2 = diagObj.db;\n  const globalConfig = getConfig();\n  const pieConfig = cleanAndMerge(db2.getConfig(), globalConfig.pie);\n  const MARGIN = 40;\n  const LEGEND_RECT_SIZE = 18;\n  const LEGEND_SPACING = 4;\n  const height = 450;\n  const pieWidth = height;\n  const svg = selectSvgElement(id);\n  const group = svg.append(\"g\");\n  group.attr(\"transform\", \"translate(\" + pieWidth / 2 + \",\" + height / 2 + \")\");\n  const { themeVariables } = globalConfig;\n  let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\n  outerStrokeWidth ??= 2;\n  const textPosition = pieConfig.textPosition;\n  const radius = Math.min(pieWidth, height) / 2 - MARGIN;\n  const arcGenerator = arc().innerRadius(0).outerRadius(radius);\n  const labelArcGenerator = arc().innerRadius(radius * textPosition).outerRadius(radius * textPosition);\n  group.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius + outerStrokeWidth / 2).attr(\"class\", \"pieOuterCircle\");\n  const sections2 = db2.getSections();\n  const arcs = createPieArcs(sections2);\n  const myGeneratedColors = [\n    themeVariables.pie1,\n    themeVariables.pie2,\n    themeVariables.pie3,\n    themeVariables.pie4,\n    themeVariables.pie5,\n    themeVariables.pie6,\n    themeVariables.pie7,\n    themeVariables.pie8,\n    themeVariables.pie9,\n    themeVariables.pie10,\n    themeVariables.pie11,\n    themeVariables.pie12\n  ];\n  const color = scaleOrdinal(myGeneratedColors);\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", (datum) => {\n    return color(datum.data.label);\n  }).attr(\"class\", \"pieCircle\");\n  let sum = 0;\n  sections2.forEach((section) => {\n    sum += section;\n  });\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"text\").text((datum) => {\n    return (datum.data.value / sum * 100).toFixed(0) + \"%\";\n  }).attr(\"transform\", (datum) => {\n    return \"translate(\" + labelArcGenerator.centroid(datum) + \")\";\n  }).style(\"text-anchor\", \"middle\").attr(\"class\", \"slice\");\n  group.append(\"text\").text(db2.getDiagramTitle()).attr(\"x\", 0).attr(\"y\", -(height - 50) / 2).attr(\"class\", \"pieTitleText\");\n  const legend = group.selectAll(\".legend\").data(color.domain()).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (_datum, index) => {\n    const height2 = LEGEND_RECT_SIZE + LEGEND_SPACING;\n    const offset = height2 * color.domain().length / 2;\n    const horizontal = 12 * LEGEND_RECT_SIZE;\n    const vertical = index * height2 - offset;\n    return \"translate(\" + horizontal + \",\" + vertical + \")\";\n  });\n  legend.append(\"rect\").attr(\"width\", LEGEND_RECT_SIZE).attr(\"height\", LEGEND_RECT_SIZE).style(\"fill\", color).style(\"stroke\", color);\n  legend.data(arcs).append(\"text\").attr(\"x\", LEGEND_RECT_SIZE + LEGEND_SPACING).attr(\"y\", LEGEND_RECT_SIZE - LEGEND_SPACING).text((datum) => {\n    const { label, value } = datum.data;\n    if (db2.getShowData()) {\n      return `${label} [${value}]`;\n    }\n    return label;\n  });\n  const longestTextWidth = Math.max(\n    ...legend.selectAll(\"text\").nodes().map((node) => node?.getBoundingClientRect().width ?? 0)\n  );\n  const totalWidth = pieWidth + MARGIN + LEGEND_RECT_SIZE + LEGEND_SPACING + longestTextWidth;\n  svg.attr(\"viewBox\", `0 0 ${totalWidth} ${height}`);\n  configureSvgSize(svg, height, totalWidth, pieConfig.useMaxWidth);\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/pie/pieDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles: pieStyles_default\n};\nexport {\n  diagram\n};\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n"],"names":["descending","a","b","NaN","identity","d","DEFAULT_PIE_CONFIG","defaultConfig_default","pie","DEFAULT_PIE_DB","sections","Map","showData","config","structuredClone","db","getConfig","__name","clear","setDiagramTitle","getDiagramTitle","setAccTitle","getAccTitle","setAccDescription","getAccDescription","addSection","label","value","has","set","log","debug","getSections","setShowData","toggle","getShowData","populateDb","ast","db2","populateCommonDb","map","parser","parse","async","input","pieStyles_default","options","pieStrokeColor","pieStrokeWidth","pieOpacity","pieOuterStrokeColor","pieOuterStrokeWidth","pieTitleTextSize","pieTitleTextColor","fontFamily","pieSectionTextColor","pieSectionTextSize","pieLegendTextColor","pieLegendTextSize","createPieArcs","sections2","pieData","entries","element","sort","sortValues","startAngle","constant","endAngle","tau","padAngle","data","i","j","k","a1","v","n","array","length","sum","index","Array","arcs","a0","apply","this","arguments","da","Math","min","max","p","abs","pa","_","d3pie","d3Section","diagram","renderer","draw","text","id","_version","diagObj","globalConfig","pieConfig","cleanAndMerge","LEGEND_RECT_SIZE","height","pieWidth","svg","selectSvgElement","group","append","attr","themeVariables","outerStrokeWidth","parseFontSize","textPosition","radius","arcGenerator","arc","innerRadius","outerRadius","labelArcGenerator","myGeneratedColors","pie1","pie2","pie3","pie4","pie5","pie6","pie7","pie8","pie9","pie10","pie11","pie12","color","scaleOrdinal","selectAll","enter","datum","forEach","section","toFixed","centroid","style","legend","domain","_datum","totalWidth","nodes","node","getBoundingClientRect","width","configureSvgSize","useMaxWidth","styles"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}