{"version":3,"mappings":"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","names":["hasOwnProperty","Object","prototype","assign","createAssigner","object","source","isPrototype","isArrayLike","copyObject","keys","key","call","assignValue","baseSlice","array","start","end","index","length","result","Array","compact","resIndex","value","arrayAggregator","setter","iteratee","accumulator","baseAggregator","collection","baseEach","difference","baseRest","values","isArrayLikeObject","comparator","includes","arrayIncludes","isCommon","valuesLength","cacheHas","SetCache","outer","computed","valuesIndex","push","baseDifference","baseFlatten","drop","n","guard","undefined","toInteger","dropRight","arrayEvery","predicate","baseEvery","every","isArray","baseIteratee","head","flatMap","map","initializer","groupBy","baseAssignValue","func","isString","isObjectLike","baseGetTag","nativeMax","Math","max","fromIndex","indexOf","baseIndexOf","nodeIsRegExp","nodeUtil","isRegExp","baseUnary","pickBy","props","arrayMap","getAllKeysIn","prop","basePickBy","path","reject","arrayFilter","baseFilter","TypeError","args","arguments","this","apply","negate","baseSome","some","arraySome","uniq","baseUniq","isAstNode","obj","$type","isReference","$refText","isLinkingError","container","reference","message","AbstractAstReflection","constructor","subtypes","allSubtypes","isInstance","node","type","isSubtype","subtype","supertype","nested","existing","computeIsSubtype","getAllSubTypes","allTypes","getAllTypes","types","possibleSubType","isCompositeCstNode","content","isLeafCstNode","tokenType","isRootCstNode","fullText","StreamImpl","startFn","nextFn","iterator","state","next","Symbol","isEmpty","Boolean","done","count","toArray","toSet","Set","toMap","keyFn","valueFn","entryStream","element","Map","toString","join","concat","other","first","firstDone","DONE_RESULT","separator","addSeparator","searchElement","forEach","callbackfn","filter","nonNullable","e","reduce","initialValue","previousValue","reduceRight","recursiveReduce","find","findIndex","mapped","isIterable","flat","depth","stream","tail","skipCount","i","limit","maxSize","size","distinct","by","set","internalState","has","add","exclude","otherKeySet","item","ownKey","EMPTY_STREAM","freeze","collections","collIndex","arrIndex","TreeStreamImpl","root","children","options","super","iterators","includeRoot","pruned","pop","prune","Reduction","RangeComparison","streamCst","tokenToRange","token","character","startColumn","line","startLine","endColumn","endLine","toDocumentSegment","offset","range","inRange","to","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","compareRange","sum","a","b","product","min","DefaultNameRegexp","findCommentNode","cstNode","commentNames","previous","hidden","parent","getPreviousNode","isCommentNode","child","name","ErrorWithLocation","Error","assertUnreachable","_","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","reflection","ArrayLiteral","ArrayType","BooleanLiteral","Conjunction","Disjunction","Grammar","GrammarImport","InferredType","isInferredType","Interface","isInterface","NamedArgument","Negation","NumberLiteral","Parameter","ParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","Type","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","CrossReference","isCrossReference","EndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","RegexToken","RuleCall","isRuleCall","TerminalAlternatives","TerminalGroup","TerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","Wildcard","LangiumGrammarAstReflection","getReferenceType","refInfo","referenceId","property","getTypeMetaData","properties","defaultValue","getContainerOfType","typePredicate","$container","getDocument","findRootNode","$document","streamContents","keyIndex","arrayIndex","startsWith","isAstNodeInRange","streamAllContents","streamAst","astNode","_a","nodeRange","$cstNode","streamReferences","copyDefaultValue","propertyType","cc","char","charCodeAt","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","idx","input","groupIdx","saveState","restoreState","newState","pattern","consumeChar","disjunction","flags","loc","begin","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","ASSERT_NEVER_REACH_HERE","quantifier","isBacktracking","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","classEscape","capturing","groupAst","number","parseInt","nextChar","howMuch","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","NEWLINE_REGEXP","regexpParser","visitor","isStarting","endRegexpStack","multiline","endRegex","reset","regex","startRegexp","String","fromCharCode","escapedChar","escapeRegExp","RegExp","match","isMultilineComment","regexp","whitespaceCharacters","split","isWhitespace","ws","replace","partialMatches","partial","re","process","tmp","appendRaw","nbChars","substr","appendOptional","lastIndex","exec","partialRegExp","getAllReachableRules","grammar","allTerminals","ruleNames","entryRule","rules","ast.isParserRule","entry","getEntryRule","topMostRules","ast.isTerminalRule","getHiddenRules","rule","ruleDfs","visitedSet","ast.isRuleCall","refRule","ref","isCommentTerminal","terminalRule","terminalRegex","findNodeForProperty","nodes","findNodesForPropertyInternal","nodeFeature","grammarSource","ast.isAssignment","feature","findNodeForKeyword","keyword","ast.isKeyword","treeIterator","keywordNodes","childNode","findNodesForKeywordInternal","findNameAssignment","startNode","ast.isInferredType","ast.isAction","findNameAssignmentInternal","cache","go","refType","childAssignment","get","toLowerCase","ast.isSimpleType","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","definition","getExplicitRuleType","inferredType","dataType","returnType","ast.isInterface","ast.isType","getTypeName","actionType","action","getActionType","s","u","abstractElementToRegex","flagText","entries","WILDCARD","withCardinality","alternatives","elements","cardinality","lookahead","ast.isTerminalGroup","ast.isCharacterRange","right","keywordToRegex","left","wrap","characterRangeToRegex","ast.isTerminalRuleCall","ast.isNegatedToken","terminal","negateTokenToRegex","ast.isUntilToken","until","ast.isRegexToken","lastSlash","lastIndexOf","regexFlags","ast.isWildcard","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","timer","Date","getTime","val","time","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","bar","tokenLabel","tokType","LABEL","AbstractProduction","_definition","accept","prod","NonTerminal","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","label","Option","terminalType","serializedTerminal","terminalLabel","PATTERN","GAstVisitor","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","isOptionalProd","alreadyVisited","subProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","flatten","firstForBranching","IN","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","upperChar","lowerChar","handleIgnoreCase","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","analyzeTokenTypes","tokenTypes","tracer","defaults","useSticky","debug","safeMode","positionTracking","lineTerminatorCharacters","onlyRelevantTypes","charCodeToOptimizedIdxMap","initCharCodeToOptimizedIndexMap","currType","Lexer","NA","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","emptyGroups","patternIdxToConfig","hasCustom","currPattern","regExpSource","addStickyFlag","addStartOfInput","isFunction","escapedRegExpString","wrappedRegExp","tokenTypeIdx","clazz","groupName","GROUP","SKIPPED","isUndefined","longerAltType","LONGER_ALT","PUSH_MODE","lineTerminatorCharCodes","getCharCodes","LINE_BREAKS","checkLineBreaksIssues","isCustomPattern","isShortPattern","acc","x","longerAlt","canLineTerminator","isCustom","short","canBeOptimized","charCodeToPatternIdxToConfig","currTokType","optimizedIdx","addToMapOfArrays","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","validatePatterns","validModesNames","errors","missingResult","tokenTypesWithMissingPattern","LexerDefinitionErrorType","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","end_of_input","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","startAnchorVisitor","start_of_input","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","performWarningRuntimeChecks","lexerDefinition","trackLines","warnings","hasAnyLineBreak","concreteTokenTypes","modes","terminatorCharCodes","currIssue","details","issue","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","buildLineBreakIssueMessage","warningDescriptor","NO_LINE_BREAKS_FLAGS","LineTerminatorOptimizedTester","text","len","c","charsOrCodes","numOrString","charCode","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","clone","categories","searching","CATEGORIES","newCategories","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","startOffset","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","lineTerminatorsPattern","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","config","lexerDefinitionErrors","lexerDefinitionWarning","trackStartLines","trackEndLines","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","traceMethod","log","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","allModeNames","currModDef","currModName","currAnalyzeResult","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","endOffset","tokenVector","tokenToAdd","hasTokenLabel","PARENT","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","_first","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","AlternativeGAST","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","validateGrammar","topLevels","duplicateErrors","collectorVisitor","OccurrenceValidationCollector","allRuleProductions","allProductions","duplicates","identifyProductionForDuplicates","currGroup","currDuplicates","firstProd","defError","DUPLICATE_PRODUCTIONS","param","getExtraProductionArgument","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","currRuleName","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","orCollector","OrCollector","alternations","currOr","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","className","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","errorsFromNextSteps","currRefRule","currSubDef","isFirstOptional","hasMore","rest","validateAmbiguousAlternationAlternatives","globalMaxLookahead","ors","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currErrors","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","RepetitionCollector","resolveGrammar","actualOptions","topRulesTable","refResolver","orgResolveGrammar","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","topLevelRules","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","defineProperty","enumerable","configurable","writable","defaultVisit","ctx","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","createBaseSemanticVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","CstVisitorDefinitionError","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","peek","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","baseCtors","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","definitionErrors","validationErrors","tokensMap","orgValidateGrammar","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","context","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","buildATNKey","AbstractTransition","target","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","createATN","atn","decisionMap","decisionStates","ruleToStartState","ruleToStopState","states","ruleLength","stop","createRuleStartAndStopATNStates","ruleBlock","block","buildRuleHandle","production","tokenRef","currentRule","nonTerminal","addTransition","ruleRef","defineDecisionState","handle","makeAlts","optional","epsilon","starState","star","sep","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","blkStart","blkEnd","loop","loopback","loopEnd","decision","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","splice","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","computeStartState","performLookahead","s0","previousD","d","getExistingTargetState","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","closure","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","atnState","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","edges","mapKey","numberOfTransitions","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","MIN_VALUE","MAX_VALUE","Number","candidate","Is","objectLiteral","one","two","three","four","uri","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","languageId","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","slice","leftIdx","rightIdx","ret","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","FullTextDocument$1","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","added","unshift","construct","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","services","_unorderedGroups","lexer","parser","LanguageMetaData","mode","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","callback","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","LangiumParser","nodeBuilder","assignmentMap","linker","references","Linker","converter","ValueConverter","astReflection","shared","AstReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","fragment","explicit","parse","lexerResult","clear","lexerErrors","lexerReport","report","parserErrors","createNode","err","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","$containerProperty","$containerIndex","linkContentToContainer","typeMetaData","genericNode","assignMandatoryProperties","buildReference","existingValue","newValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","groupState","trackedAlternatives","wrapped","delete","buildUnorderedGroup","buildGroup","condition","isConjunction","isNegation","isParameterReference","isBooleanLiteral","true","guardCondition","crossRef","assignTerminal","getRuleName","createLangiumParser","prepareLangiumParser","DefaultTokenBuilder","buildTokens","reachableRules","terminalTokens","buildTerminalTokens","buildKeywordTokens","terminalToken","flushLexingReport","popDiagnostics","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","caseInsensitive","keywordPattern","buildKeywordPattern","findLongerAlt","getCaseInsensitivePattern","longerAlts","DefaultValueConverter","nameAssigment","getCrossReferenceTerminal","runConverter","convertInt","convertString","convertID","_c","getRuleType","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","_ral","RAL","ral","install","default","events","Emitter","ral_1","require$$0","_disposable","dispose","None","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","invoke","callbacks","contexts","_options","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","cancellation","CancellationTokenSource","CancellationToken","stringArray","elem","require$$1","events_1","require$$2","isCancellationRequested","onCancellationRequested","Cancelled","shortcutEvent","setTimeout","MutableToken","_isCancelled","cancel","_emitter","_token","lastTick","OperationCancelled","isOperationCancelled","async","interruptAndCheck","performance","now","Promise","resolve","setImmediate","Deferred","promise","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","LIB","isAtLineStart","textOffset","getWellformedEdit","spans","r","o","h","cwd","normalize","isAbsolute","relative","f","l","_makeLong","dirname","basename","extname","format","dir","base","ext","delimiter","win32","posix","exports","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w","joinPath","resolvePath","UriUtils","DocumentState","equals","fromPath","toPath","fromParts","toParts","repeat","DefaultLangiumDocumentFactory","serviceRegistry","ServiceRegistry","textDocuments","workspace","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","fromModel","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","LangiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","findAssignment","nodeElem","nameNode","isChildNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserialize","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","findNodesForProperty","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","register","fileExtensions","singleton","hasServices","diagnosticData","ValidationCategory","DocumentValidator","ValidationRegistry","entriesBefore","entriesAfter","checksRecord","thisObj","category","wrapValidationException","addEntry","handleException","functionality","messageContext","getChecks","checks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","info","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","sortDocuments","Linked","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","listenersCopy","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","TokenBuilder","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","ChevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","parseJSDoc","opts","currentLine","currentCharacter","lines","lastCharacter","skipWhitespace","tagRegex","tagMatch","fullMatch","inlineTagMatches","matchAll","inlineTagRegex","buildInlineTokens","getLines","normalizeOptions","startPosition","JSDocCommentImpl","parseJSDocElement","parseJSDocComment","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOption","escaped","getTag","getAllTags","getTags","fillNewlines","trim","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","firstRegex","lastRegex","isJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","CompletionParser","createCompletionParser","References","serializer","Hydrator","JsonSerializer","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","__requested__","cause","value2","value1","EmptyFileSystemProvider","EmptyFileSystem","minimalGrammarModule","minimalSharedGrammarModule","ast.LangiumGrammarAstReflection","loadGrammarFromJson","json","createMinimalGrammarServices","__defProp","__name","Statement","Architecture","Axis","Branch","Checkout","CherryPicking","ClassDefStatement","Commit","Curve","Edge","Entry","GitGraph","Info","Item","Junction","Merge","Packet","PacketBlock","Pie","PieSection","Radar","Service","Treemap","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","loadedTreemapGrammar","TreemapRow","Direction","Leaf","Section","MermaidAstReflection","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","TreemapGrammar","InfoLanguageMetaData","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","TreemapLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","TreemapGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runCommonConverter","runCustomConverter","_cstNode","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","GitGraphTokenBuilder","GitGraphModule","createGitGraphServices","InfoTokenBuilder","InfoModule","createInfoServices","PacketTokenBuilder","PacketModule","createPacketServices","PieTokenBuilder","PieValueConverter","PieModule","createPieServices","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","RadarTokenBuilder","RadarModule","createRadarServices","TreemapTokenBuilder","classDefRegex","TreemapValueConverter","parseFloat","styleText","registerValidationChecks","TreemapValidator","registry","checkSingleRoot","rootNodeIndentation","row","TreemapRows","TreemapModule","createTreemapServices","parsers","initializers","createInfoServices2","__vitePreload","info63CPKGFF","__VITE_PRELOAD__","packet","createPacketServices2","packetHUATNLJX","pie","createPieServices2","pieWTHONI2E","architecture","createArchitectureServices2","architectureO4VJ6CD3","gitGraph","createGitGraphServices2","gitGraphZV4HHKMB","radar","createRadarServices2","radarNJJJXTRR","treemap","createTreemapServices2","treemap75Q7IDZK","diagramType","MermaidParseError"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"sources":["../../node_modules/lodash-es/assign.js","../../node_modules/lodash-es/_baseSlice.js","../../node_modules/lodash-es/compact.js","../../node_modules/lodash-es/_arrayAggregator.js","../../node_modules/lodash-es/_baseAggregator.js","../../node_modules/lodash-es/difference.js","../../node_modules/lodash-es/_baseDifference.js","../../node_modules/lodash-es/drop.js","../../node_modules/lodash-es/dropRight.js","../../node_modules/lodash-es/_arrayEvery.js","../../node_modules/lodash-es/_baseEvery.js","../../node_modules/lodash-es/every.js","../../node_modules/lodash-es/head.js","../../node_modules/lodash-es/flatMap.js","../../node_modules/lodash-es/groupBy.js","../../node_modules/lodash-es/_createAggregator.js","../../node_modules/lodash-es/isString.js","../../node_modules/lodash-es/includes.js","../../node_modules/lodash-es/indexOf.js","../../node_modules/lodash-es/isRegExp.js","../../node_modules/lodash-es/_baseIsRegExp.js","../../node_modules/lodash-es/pickBy.js","../../node_modules/lodash-es/reject.js","../../node_modules/lodash-es/negate.js","../../node_modules/lodash-es/_baseSome.js","../../node_modules/lodash-es/some.js","../../node_modules/lodash-es/uniq.js","../../node_modules/langium/lib/syntax-tree.js","../../node_modules/langium/lib/utils/stream.js","../../node_modules/langium/lib/utils/cst-utils.js","../../node_modules/langium/lib/utils/errors.js","../../node_modules/langium/lib/languages/generated/ast.js","../../node_modules/langium/lib/utils/ast-utils.js","../../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","../../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","../../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","../../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","../../node_modules/langium/lib/utils/regexp-utils.js","../../node_modules/langium/lib/utils/grammar-utils.js","../../node_modules/@chevrotain/utils/lib/src/print.js","../../node_modules/@chevrotain/utils/lib/src/timer.js","../../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","../../node_modules/@chevrotain/gast/lib/src/model.js","../../node_modules/@chevrotain/gast/lib/src/visitor.js","../../node_modules/@chevrotain/gast/lib/src/helpers.js","../../node_modules/chevrotain/lib/src/parse/grammar/rest.js","../../node_modules/chevrotain/lib/src/parse/grammar/first.js","../../node_modules/chevrotain/lib/src/parse/constants.js","../../node_modules/chevrotain/lib/src/parse/grammar/follow.js","../../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","../../node_modules/chevrotain/lib/src/scan/reg_exp.js","../../node_modules/chevrotain/lib/src/scan/lexer.js","../../node_modules/chevrotain/lib/src/scan/tokens.js","../../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","../../node_modules/chevrotain/lib/src/scan/lexer_public.js","../../node_modules/chevrotain/lib/src/scan/tokens_public.js","../../node_modules/chevrotain/lib/src/parse/errors_public.js","../../node_modules/chevrotain/lib/src/parse/grammar/resolver.js","../../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","../../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","../../node_modules/chevrotain/lib/src/parse/grammar/checks.js","../../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","../../node_modules/chevrotain/lib/src/parse/exceptions_public.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","../../node_modules/chevrotain/lib/src/parse/grammar/keys.js","../../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","../../node_modules/chevrotain/lib/src/parse/cst/cst.js","../../node_modules/chevrotain/lib/src/lang/lang_extensions.js","../../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","../../node_modules/chevrotain/lib/src/parse/parser/parser.js","../../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","../../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","../../node_modules/chevrotain-allstar/lib/atn.js","../../node_modules/chevrotain-allstar/lib/dfa.js","../../node_modules/chevrotain-allstar/lib/all-star-lookahead.js","../../node_modules/lodash-es/uniqBy.js","../../node_modules/vscode-languageserver-types/lib/esm/main.js","../../node_modules/langium/lib/parser/cst-node-builder.js","../../node_modules/langium/lib/parser/langium-parser.js","../../node_modules/langium/lib/parser/parser-builder-base.js","../../node_modules/langium/lib/parser/langium-parser-builder.js","../../node_modules/langium/lib/parser/token-builder.js","../../node_modules/langium/lib/parser/value-converter.js","../../node_modules/vscode-jsonrpc/lib/common/ral.js","../../node_modules/vscode-jsonrpc/lib/common/events.js","../../node_modules/vscode-jsonrpc/lib/common/cancellation.js","../../node_modules/vscode-jsonrpc/lib/common/is.js","../../node_modules/langium/lib/utils/promise-utils.js","../../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","../../node_modules/vscode-uri/lib/esm/index.mjs","../../node_modules/langium/lib/utils/uri-utils.js","../../node_modules/langium/lib/workspace/documents.js","../../node_modules/langium/lib/references/linker.js","../../node_modules/langium/lib/references/name-provider.js","../../node_modules/langium/lib/references/references.js","../../node_modules/langium/lib/utils/collections.js","../../node_modules/langium/lib/references/scope-computation.js","../../node_modules/langium/lib/references/scope.js","../../node_modules/langium/lib/utils/caching.js","../../node_modules/langium/lib/references/scope-provider.js","../../node_modules/langium/lib/serializer/json-serializer.js","../../node_modules/langium/lib/service-registry.js","../../node_modules/langium/lib/validation/validation-registry.js","../../node_modules/langium/lib/validation/document-validator.js","../../node_modules/langium/lib/workspace/ast-descriptions.js","../../node_modules/langium/lib/workspace/ast-node-locator.js","../../node_modules/langium/lib/utils/disposable.js","../../node_modules/langium/lib/workspace/configuration.js","../../node_modules/langium/lib/workspace/document-builder.js","../../node_modules/langium/lib/workspace/index-manager.js","../../node_modules/langium/lib/workspace/workspace-manager.js","../../node_modules/langium/lib/parser/lexer.js","../../node_modules/langium/lib/documentation/jsdoc.js","../../node_modules/langium/lib/documentation/documentation-provider.js","../../node_modules/langium/lib/documentation/comment-provider.js","../../node_modules/langium/lib/parser/async-parser.js","../../node_modules/langium/lib/workspace/workspace-lock.js","../../node_modules/langium/lib/serializer/hydrator.js","../../node_modules/langium/lib/default-module.js","../../node_modules/langium/lib/languages/grammar-config.js","../../node_modules/langium/lib/parser/completion-parser-builder.js","../../node_modules/langium/lib/dependency-injection.js","../../node_modules/langium/lib/workspace/file-system-provider.js","../../node_modules/langium/lib/utils/grammar-loader.js","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs","../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs","../../node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs"],"sourcesContent":["import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar ClassDefStatement = \"ClassDefStatement\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Item = \"Item\";\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Treemap = \"Treemap\";\nfunction isTreemap(item) {\n  return reflection.isInstance(item, Treemap);\n}\n__name(isTreemap, \"isTreemap\");\nvar TreemapRow = \"TreemapRow\";\nvar Direction = \"Direction\";\nvar Leaf = \"Leaf\";\nvar Section = \"Section\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, ClassDefStatement, Commit, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Item, Junction, Leaf, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Section, Service, Statement, Treemap, TreemapRow];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      case Leaf:\n      case Section: {\n        return this.isSubtype(Item, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case ClassDefStatement: {\n        return {\n          name: ClassDefStatement,\n          properties: [\n            { name: \"className\" },\n            { name: \"styleText\" }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Item: {\n        return {\n          name: Item,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"bits\" },\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Treemap: {\n        return {\n          name: Treemap,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" },\n            { name: \"TreemapRows\", defaultValue: [] }\n          ]\n        };\n      }\n      case TreemapRow: {\n        return {\n          name: TreemapRow,\n          properties: [\n            { name: \"indent\" },\n            { name: \"item\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Leaf: {\n        return {\n          name: Leaf,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Section: {\n        return {\n          name: Section,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"packet\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"bits\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]}]},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"REFERENCE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@2\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@2\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\nvar loadedTreemapGrammar;\nvar TreemapGrammar = /* @__PURE__ */ __name(() => loadedTreemapGrammar ?? (loadedTreemapGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Treemap\",\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Treemap\",\"returnType\":{\"$ref\":\"#/interfaces@4\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"TreemapRows\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"TREEMAP_KEYWORD\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap-beta\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"CLASS_DEF\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/classDef\\\\\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\\\\\s+([^;\\\\\\\\r\\\\\\\\n]*))?(?:;)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STYLE_SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":::\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"COMMA\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\",\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WS\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"ML_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\%\\\\\\\\%[^\\\\\\\\n]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"NL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"TreemapRow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"indent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"item\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"ClassDef\",\"dataType\":\"string\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Item\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Section\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Leaf\",\"returnType\":{\"$ref\":\"#/interfaces@2\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INDENTATION\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]{1,}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9_\\\\\\\\.\\\\\\\\,]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"MyNumber\",\"dataType\":\"number\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Item\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"name\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"classSelector\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Section\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[]},{\"$type\":\"Interface\",\"name\":\"Leaf\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}]},{\"$type\":\"Interface\",\"name\":\"ClassDefStatement\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"className\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"styleText\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Treemap\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"TreemapRows\",\"type\":{\"$type\":\"ArrayType\",\"elementType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@14\"}}},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[],\"$comment\":\"/**\\\\n * Treemap grammar for Langium\\\\n * Converted from mindmap grammar\\\\n *\\\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\\\n * before the treemap keyword, allowing for empty lines and comments before the\\\\n * treemap declaration.\\\\n */\"}`)), \"TreemapGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar TreemapLanguageMetaData = {\n  languageId: \"treemap\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar TreemapGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => TreemapGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => TreemapLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  Treemap,\n  isTreemap,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  TreemapGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  TreemapGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/treemap/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/treemap/tokenBuilder.ts\nvar TreemapTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"TreemapTokenBuilder\");\n  }\n  constructor() {\n    super([\"treemap\"]);\n  }\n};\n\n// src/language/treemap/valueConverter.ts\nvar classDefRegex = /classDef\\s+([A-Z_a-z]\\w+)(?:\\s+([^\\n\\r;]*))?;?/;\nvar TreemapValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"TreemapValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"NUMBER2\") {\n      return parseFloat(input.replace(/,/g, \"\"));\n    } else if (rule.name === \"SEPARATOR\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"STRING2\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"INDENTATION\") {\n      return input.length;\n    } else if (rule.name === \"ClassDef\") {\n      if (typeof input !== \"string\") {\n        return input;\n      }\n      const match = classDefRegex.exec(input);\n      if (match) {\n        return {\n          $type: \"ClassDefStatement\",\n          className: match[1],\n          styleText: match[2] || void 0\n        };\n      }\n    }\n    return void 0;\n  }\n};\n\n// src/language/treemap/treemap-validator.ts\nfunction registerValidationChecks(services) {\n  const validator = services.validation.TreemapValidator;\n  const registry = services.validation.ValidationRegistry;\n  if (registry) {\n    const checks = {\n      Treemap: validator.checkSingleRoot.bind(validator)\n      // Remove unused validation for TreemapRow\n    };\n    registry.register(checks, validator);\n  }\n}\n__name(registerValidationChecks, \"registerValidationChecks\");\nvar TreemapValidator = class {\n  static {\n    __name(this, \"TreemapValidator\");\n  }\n  /**\n   * Validates that a treemap has only one root node.\n   * A root node is defined as a node that has no indentation.\n   */\n  checkSingleRoot(doc, accept) {\n    let rootNodeIndentation;\n    for (const row of doc.TreemapRows) {\n      if (!row.item) {\n        continue;\n      }\n      if (rootNodeIndentation === void 0 && // Check if this is a root node (no indentation)\n      row.indent === void 0) {\n        rootNodeIndentation = 0;\n      } else if (row.indent === void 0) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      } else if (rootNodeIndentation !== void 0 && rootNodeIndentation >= parseInt(row.indent, 10)) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      }\n    }\n  }\n};\n\n// src/language/treemap/module.ts\nvar TreemapModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new TreemapTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new TreemapValueConverter(), \"ValueConverter\")\n  },\n  validation: {\n    TreemapValidator: /* @__PURE__ */ __name(() => new TreemapValidator(), \"TreemapValidator\")\n  }\n};\nfunction createTreemapServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Treemap = inject(\n    createDefaultCoreModule({ shared }),\n    TreemapGeneratedModule,\n    TreemapModule\n  );\n  shared.ServiceRegistry.register(Treemap);\n  registerValidationChecks(Treemap);\n  return { shared, Treemap };\n}\n__name(createTreemapServices, \"createTreemapServices\");\n\nexport {\n  TreemapModule,\n  createTreemapServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-JEIROHC2.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs\";\nimport {\n  TreemapModule,\n  createTreemapServices\n} from \"./chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap\n} from \"./chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-63CPKGFF.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-HUATNLJX.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-WTHONI2E.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-NJJJXTRR.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\"),\n  treemap: /* @__PURE__ */ __name(async () => {\n    const { createTreemapServices: createTreemapServices2 } = await import(\"./chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs\");\n    const parser = createTreemapServices2().Treemap.parser.LangiumParser;\n    parsers.treemap = parser;\n  }, \"treemap\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  TreemapModule,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  createTreemapServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap,\n  parse\n};\n"],"file":"assets/treemap-75Q7IDZK-BsyVbHwb.js"}