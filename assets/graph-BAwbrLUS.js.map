{"version":3,"file":"graph-BAwbrLUS.js","sources":["../../node_modules/lodash-es/union.js","../../node_modules/dagre-d3-es/src/graphlib/graph.js"],"sourcesContent":["import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, 'directed')\n      ? opts.directed\n      : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, 'multigraph')\n      ? opts.multigraph\n      : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, 'compound')\n      ? opts.compound\n      : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = (e) => this.removeEdge(this._edgeObjs[e]);\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n"],"names":["union","baseRest","arrays","baseUniq","baseFlatten","isArrayLikeObject","GRAPH_NODE","Graph","constructor","opts","this","_isDirected","Object","prototype","hasOwnProperty","call","directed","_isMultigraph","multigraph","_isCompound","compound","_label","undefined","_defaultNodeLabelFn","_.constant","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isDirected","isMultigraph","isCompound","setGraph","label","graph","setDefaultNodeLabel","newDefault","_.isFunction","nodeCount","_nodeCount","nodes","_.keys","sources","self","_.filter","v","_.isEmpty","sinks","setNodes","vs","value","args","arguments","_.each","length","setNode","node","hasNode","removeNode","removeEdge","e","_removeFromParentsChildList","children","child","setParent","parent","Error","_.isUndefined","ancestor","predecessors","predsV","successors","sucsV","neighbors","preds","_.union","isLeaf","filterNodes","filter","copy","w","setEdge","edge","parents","findParent","setDefaultEdgeLabel","edgeCount","_edgeCount","edges","_.values","setPath","_.reduce","name","valueSpecified","arg0","edgeArgsToId","edgeObj","v_","w_","tmp","edgeArgsToObj","freeze","incrementOrInitEntry","edgeObjToId","hasEdge","decrementOrRemoveEntry","inEdges","u","inV","outEdges","outV","nodeEdges","concat","map","k"],"mappings":"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","x_google_ignoreList":[0,1]}