const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CuHnpHBp.js","react-brxg81GL.js","assets/index-B-B5qyvq.css"])))=>i.map(i=>d[i]);
import{_ as r}from"./assets/index-CuHnpHBp.js";import"./react-brxg81GL.js";class t{static async getFullErrorReport(t=24){try{const{errorLogger:e}=await r(async()=>{const{errorLogger:r}=await import("./assets/index-CuHnpHBp.js").then(r=>r.bC);return{errorLogger:r}},__vite__mapDeps([0,1,2]));return await e.exportErrorsForDebugging(t)}catch(e){return{error:"Failed to load error logging service"}}}static async getErrorPatterns(t=24){try{const{errorLogger:e}=await r(async()=>{const{errorLogger:r}=await import("./assets/index-CuHnpHBp.js").then(r=>r.bC);return{errorLogger:r}},__vite__mapDeps([0,1,2]));return await e.getErrorPatterns(t)}catch(e){return[]}}static async getCriticalErrors(){try{const{errorLogger:t}=await r(async()=>{const{errorLogger:r}=await import("./assets/index-CuHnpHBp.js").then(r=>r.bC);return{errorLogger:r}},__vite__mapDeps([0,1,2]));return await t.getCriticalErrors()}catch(t){return[]}}static async getComponentErrors(t,e=24){try{const{errorLogger:o}=await r(async()=>{const{errorLogger:r}=await import("./assets/index-CuHnpHBp.js").then(r=>r.bC);return{errorLogger:r}},__vite__mapDeps([0,1,2]));return await o.getErrorsByComponent(t,e)}catch(o){return[]}}static async quickHealthCheck(){try{const{errorLogger:t}=await r(async()=>{const{errorLogger:r}=await import("./assets/index-CuHnpHBp.js").then(r=>r.bC);return{errorLogger:r}},__vite__mapDeps([0,1,2])),[e,o,a]=await Promise.all([t.getCriticalErrors(),t.getErrorPatterns(6),t.getRecentErrors(6,100)]);return{health_status:e.length>0?"CRITICAL":"HEALTHY",critical_count:e.length,pattern_count:o.length,total_errors_6h:a.length,timestamp:(new Date).toISOString()}}catch(t){return{health_status:"UNKNOWN",error:"Failed to load error logging service"}}}static getLocalStorageErrors(){try{const r=localStorage.getItem("asr_error_logs");return r?JSON.parse(r):[]}catch(r){return[]}}}function e(){window.claudeDebug=t,window.getErrors=r=>t.getFullErrorReport(r),window.getCritical=()=>t.getCriticalErrors(),window.getPatterns=r=>t.getErrorPatterns(r),window.healthCheck=()=>t.quickHealthCheck(),window.debugComponent=(r,e)=>t.getComponentErrors(r,e),window.getLocalErrors=()=>t.getLocalStorageErrors()}"undefined"!=typeof window&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e());export{t as ClaudeDebugHelper,t as default};
//# sourceMappingURL=debugHelper.simplified-DaRJc-Xx.js.map
